{"name": "test_update_student_data", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "def test_update_student_data():\n        api_url = \"http://thetestingworldapi.com/api/studentsDetails/89621\"\n        # open the json file in read mode\n        file = open(\"C:\\\\API\\\\ApiTestingWithAllureReporting\\\\StudentManagementSystem\\\\putrequest.json\", 'r')\n        # Reading the file\n        json_file = file.read()\n        # parsing the file  in to json format\n        json_request = json.loads(json_file)\n        # creating POST request as we are creating a new request\n        response = requests.put(api_url, json_request)\n        print(response.text)\n        # parse the response\n>       response_jason = json.loads(response.text)\n\nTestCases\\test_AddNewStudent.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\amit\\AppData\\Local\\Programs\\Python\\Python38\\Lib\\json\\__init__.py:357: in loads\n    return _default_decoder.decode(s)\nC:\\Users\\amit\\AppData\\Local\\Programs\\Python\\Python38\\Lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000010B3585AE50>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nC:\\Users\\amit\\AppData\\Local\\Programs\\Python\\Python38\\Lib\\json\\decoder.py:355: JSONDecodeError"}, "attachments": [{"name": "stdout", "source": "7be9cd06-79ba-458a-89f0-3a0649cb76e7-attachment.txt", "type": "text/plain"}], "start": 1611989307997, "stop": 1611989308138, "uuid": "8e2ba380-a636-4b19-af0d-39629c61a9c9", "historyId": "75e3ff69fc1e91d8036b3af357812ad3", "testCaseId": "8c24fa1c3bc1739418f81dc334fe95c7", "fullName": "TestCases.test_AddNewStudent#test_update_student_data", "labels": [{"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_AddNewStudent"}, {"name": "host", "value": "DESKTOP-AMITK"}, {"name": "thread", "value": "11448-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_AddNewStudent"}]}